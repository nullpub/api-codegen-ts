import * as ts from 'typescript';

const a = [
  ts.createImportDeclaration(
    undefined,
    undefined,
    ts.createImportClause(
      undefined,
      ts.createNamedImports([
        ts.createImportSpecifier(undefined, ts.createIdentifier('asks')),
      ])
    ),
    ts.createStringLiteral('fp-ts/lib/Reader')
  ),
  ts.createImportDeclaration(
    undefined,
    undefined,
    ts.createImportClause(
      undefined,
      ts.createNamespaceImport(ts.createIdentifier('m'))
    ),
    ts.createStringLiteral('./models')
  ),
  ts.createImportDeclaration(
    undefined,
    undefined,
    ts.createImportClause(
      undefined,
      ts.createNamespaceImport(ts.createIdentifier('t'))
    ),
    ts.createStringLiteral('io-ts')
  ),
  ts.createInterfaceDeclaration(
    undefined,
    [ts.createModifier(ts.SyntaxKind.ExportKeyword)],
    ts.createIdentifier('RequestParams'),
    [
      ts.createTypeParameterDeclaration(
        ts.createIdentifier('T'),
        undefined,
        ts.createKeywordTypeNode(ts.SyntaxKind.UnknownKeyword)
      ),
      ts.createTypeParameterDeclaration(
        ts.createIdentifier('P'),
        undefined,
        ts.createKeywordTypeNode(ts.SyntaxKind.UnknownKeyword)
      ),
    ],
    undefined,
    [
      ts.createPropertySignature(
        undefined,
        ts.createIdentifier('method'),
        undefined,
        ts.createUnionTypeNode([
          ts.createLiteralTypeNode(ts.createStringLiteral('PUT')),
          ts.createLiteralTypeNode(ts.createStringLiteral('POST')),
          ts.createLiteralTypeNode(ts.createStringLiteral('GET')),
        ]),
        undefined
      ),
      ts.createPropertySignature(
        undefined,
        ts.createIdentifier('body'),
        undefined,
        ts.createTypeReferenceNode(ts.createIdentifier('T'), undefined),
        undefined
      ),
      ts.createPropertySignature(
        undefined,
        ts.createIdentifier('params'),
        undefined,
        ts.createTypeReferenceNode(ts.createIdentifier('P'), undefined),
        undefined
      ),
    ]
  ),
  ts.createInterfaceDeclaration(
    undefined,
    [ts.createModifier(ts.SyntaxKind.ExportKeyword)],
    ts.createIdentifier('ControllerConfig'),
    undefined,
    undefined,
    [
      ts.createPropertySignature(
        undefined,
        ts.createIdentifier('request'),
        undefined,
        ts.createFunctionTypeNode(
          [
            ts.createTypeParameterDeclaration(
              ts.createIdentifier('T'),
              undefined,
              undefined
            ),
          ],
          [
            ts.createParameter(
              undefined,
              undefined,
              undefined,
              ts.createIdentifier('params'),
              undefined,
              ts.createKeywordTypeNode(ts.SyntaxKind.AnyKeyword),
              undefined
            ),
          ],
          ts.createTypeReferenceNode(ts.createIdentifier('Observable'), [
            ts.createTypeReferenceNode(ts.createIdentifier('T'), undefined),
          ])
        ),
        undefined
      ),
    ]
  ),
  ts.createInterfaceDeclaration(
    undefined,
    [ts.createModifier(ts.SyntaxKind.ExportKeyword)],
    ts.createIdentifier('SomeControllerRequest'),
    undefined,
    undefined,
    [
      ts.createPropertySignature(
        undefined,
        ts.createIdentifier('body'),
        undefined,
        ts.createKeywordTypeNode(ts.SyntaxKind.AnyKeyword),
        undefined
      ),
      ts.createPropertySignature(
        undefined,
        ts.createIdentifier('query'),
        undefined,
        ts.createKeywordTypeNode(ts.SyntaxKind.AnyKeyword),
        undefined
      ),
      ts.createPropertySignature(
        undefined,
        ts.createIdentifier('path'),
        undefined,
        ts.createKeywordTypeNode(ts.SyntaxKind.AnyKeyword),
        undefined
      ),
    ]
  ),
  ts.createVariableStatement(
    [ts.createModifier(ts.SyntaxKind.ExportKeyword)],
    ts.createVariableDeclarationList(
      [
        ts.createVariableDeclaration(
          ts.createIdentifier('someControllerR'),
          undefined,
          ts.createCall(
            ts.createIdentifier('asks'),
            [
              ts.createTypeReferenceNode(
                ts.createIdentifier('ControllerConfig'),
                undefined
              ),
            ],
            [
              ts.createArrowFunction(
                undefined,
                undefined,
                [
                  ts.createParameter(
                    undefined,
                    undefined,
                    undefined,
                    ts.createObjectBindingPattern([
                      ts.createBindingElement(
                        undefined,
                        undefined,
                        ts.createIdentifier('request'),
                        undefined
                      ),
                    ]),
                    undefined,
                    undefined,
                    undefined
                  ),
                ],
                undefined,
                ts.createToken(ts.SyntaxKind.EqualsGreaterThanToken),
                ts.createArrowFunction(
                  undefined,
                  undefined,
                  [
                    ts.createParameter(
                      undefined,
                      undefined,
                      undefined,
                      ts.createIdentifier('req'),
                      undefined,
                      ts.createTypeReferenceNode(
                        ts.createIdentifier('SomeControllerRequest'),
                        undefined
                      ),
                      undefined
                    ),
                  ],
                  undefined,
                  ts.createToken(ts.SyntaxKind.EqualsGreaterThanToken),
                  ts.createCall(ts.createIdentifier('request'), undefined, [
                    ts.createObjectLiteral(
                      [
                        ts.createPropertyAssignment(
                          ts.createIdentifier('method'),
                          ts.createStringLiteral('PUT')
                        ),
                        ts.createSpreadAssignment(ts.createIdentifier('req')),
                      ],
                      false
                    ),
                  ])
                )
              ),
            ]
          )
        ),
      ],
      ts.NodeFlags.Const
    )
  ),
];
